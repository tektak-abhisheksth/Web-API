/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace TekTak.iLoop.Kauwa
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class Department : TBase
  {
    private int _fromCompanyId;
    private int _toCompanyId;
    private string _departmentName;
    private string _employeeIds;
    private int _mode;
    private int _departmentId;
    private int _assignedByUserId;
    private string _addedDate;
    private int _employeeCount;
    private int _userId;
    private string _username;
    private string _name;
    private string _picture;

    public int FromCompanyId
    {
      get
      {
        return _fromCompanyId;
      }
      set
      {
        __isset.fromCompanyId = true;
        this._fromCompanyId = value;
      }
    }

    public int ToCompanyId
    {
      get
      {
        return _toCompanyId;
      }
      set
      {
        __isset.toCompanyId = true;
        this._toCompanyId = value;
      }
    }

    public string DepartmentName
    {
      get
      {
        return _departmentName;
      }
      set
      {
        __isset.departmentName = true;
        this._departmentName = value;
      }
    }

    public string EmployeeIds
    {
      get
      {
        return _employeeIds;
      }
      set
      {
        __isset.employeeIds = true;
        this._employeeIds = value;
      }
    }

    public int Mode
    {
      get
      {
        return _mode;
      }
      set
      {
        __isset.mode = true;
        this._mode = value;
      }
    }

    public int DepartmentId
    {
      get
      {
        return _departmentId;
      }
      set
      {
        __isset.departmentId = true;
        this._departmentId = value;
      }
    }

    public int AssignedByUserId
    {
      get
      {
        return _assignedByUserId;
      }
      set
      {
        __isset.assignedByUserId = true;
        this._assignedByUserId = value;
      }
    }

    public string AddedDate
    {
      get
      {
        return _addedDate;
      }
      set
      {
        __isset.addedDate = true;
        this._addedDate = value;
      }
    }

    public int EmployeeCount
    {
      get
      {
        return _employeeCount;
      }
      set
      {
        __isset.employeeCount = true;
        this._employeeCount = value;
      }
    }

    public int UserId
    {
      get
      {
        return _userId;
      }
      set
      {
        __isset.userId = true;
        this._userId = value;
      }
    }

    public string Username
    {
      get
      {
        return _username;
      }
      set
      {
        __isset.username = true;
        this._username = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public string Picture
    {
      get
      {
        return _picture;
      }
      set
      {
        __isset.picture = true;
        this._picture = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool fromCompanyId;
      public bool toCompanyId;
      public bool departmentName;
      public bool employeeIds;
      public bool mode;
      public bool departmentId;
      public bool assignedByUserId;
      public bool addedDate;
      public bool employeeCount;
      public bool userId;
      public bool username;
      public bool name;
      public bool picture;
    }

    public Department() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              FromCompanyId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              ToCompanyId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              DepartmentName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              EmployeeIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Mode = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              DepartmentId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              AssignedByUserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              AddedDate = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              EmployeeCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              UserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              Username = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              Picture = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Department");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.fromCompanyId) {
        field.Name = "fromCompanyId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FromCompanyId);
        oprot.WriteFieldEnd();
      }
      if (__isset.toCompanyId) {
        field.Name = "toCompanyId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ToCompanyId);
        oprot.WriteFieldEnd();
      }
      if (DepartmentName != null && __isset.departmentName) {
        field.Name = "departmentName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DepartmentName);
        oprot.WriteFieldEnd();
      }
      if (EmployeeIds != null && __isset.employeeIds) {
        field.Name = "employeeIds";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EmployeeIds);
        oprot.WriteFieldEnd();
      }
      if (__isset.mode) {
        field.Name = "mode";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Mode);
        oprot.WriteFieldEnd();
      }
      if (__isset.departmentId) {
        field.Name = "departmentId";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DepartmentId);
        oprot.WriteFieldEnd();
      }
      if (__isset.assignedByUserId) {
        field.Name = "assignedByUserId";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AssignedByUserId);
        oprot.WriteFieldEnd();
      }
      if (AddedDate != null && __isset.addedDate) {
        field.Name = "addedDate";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(AddedDate);
        oprot.WriteFieldEnd();
      }
      if (__isset.employeeCount) {
        field.Name = "employeeCount";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EmployeeCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.userId) {
        field.Name = "userId";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(UserId);
        oprot.WriteFieldEnd();
      }
      if (Username != null && __isset.username) {
        field.Name = "username";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Username);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (Picture != null && __isset.picture) {
        field.Name = "picture";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Picture);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("Department(");
      bool __first = true;
      if (__isset.fromCompanyId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FromCompanyId: ");
        __sb.Append(FromCompanyId);
      }
      if (__isset.toCompanyId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ToCompanyId: ");
        __sb.Append(ToCompanyId);
      }
      if (DepartmentName != null && __isset.departmentName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DepartmentName: ");
        __sb.Append(DepartmentName);
      }
      if (EmployeeIds != null && __isset.employeeIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmployeeIds: ");
        __sb.Append(EmployeeIds);
      }
      if (__isset.mode) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mode: ");
        __sb.Append(Mode);
      }
      if (__isset.departmentId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DepartmentId: ");
        __sb.Append(DepartmentId);
      }
      if (__isset.assignedByUserId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AssignedByUserId: ");
        __sb.Append(AssignedByUserId);
      }
      if (AddedDate != null && __isset.addedDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AddedDate: ");
        __sb.Append(AddedDate);
      }
      if (__isset.employeeCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmployeeCount: ");
        __sb.Append(EmployeeCount);
      }
      if (__isset.userId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserId: ");
        __sb.Append(UserId);
      }
      if (Username != null && __isset.username) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Username: ");
        __sb.Append(Username);
      }
      if (Name != null && __isset.name) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Name: ");
        __sb.Append(Name);
      }
      if (Picture != null && __isset.picture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picture: ");
        __sb.Append(Picture);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
