/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace TekTak.iLoop.Kauwa
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SuggestContactResponse : TBase
  {
    private string _contactCustomIds;
    private string _contactChatNetworkCustomIds;
    private string _customContactsCustomIds;
    private DbStatus _dbStatus;

    public string ContactCustomIds
    {
      get
      {
        return _contactCustomIds;
      }
      set
      {
        __isset.contactCustomIds = true;
        this._contactCustomIds = value;
      }
    }

    public string ContactChatNetworkCustomIds
    {
      get
      {
        return _contactChatNetworkCustomIds;
      }
      set
      {
        __isset.contactChatNetworkCustomIds = true;
        this._contactChatNetworkCustomIds = value;
      }
    }

    public string CustomContactsCustomIds
    {
      get
      {
        return _customContactsCustomIds;
      }
      set
      {
        __isset.customContactsCustomIds = true;
        this._customContactsCustomIds = value;
      }
    }

    public DbStatus DbStatus
    {
      get
      {
        return _dbStatus;
      }
      set
      {
        __isset.dbStatus = true;
        this._dbStatus = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool contactCustomIds;
      public bool contactChatNetworkCustomIds;
      public bool customContactsCustomIds;
      public bool dbStatus;
    }

    public SuggestContactResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              ContactCustomIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              ContactChatNetworkCustomIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              CustomContactsCustomIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Struct) {
              DbStatus = new DbStatus();
              DbStatus.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SuggestContactResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (ContactCustomIds != null && __isset.contactCustomIds) {
        field.Name = "contactCustomIds";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContactCustomIds);
        oprot.WriteFieldEnd();
      }
      if (ContactChatNetworkCustomIds != null && __isset.contactChatNetworkCustomIds) {
        field.Name = "contactChatNetworkCustomIds";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContactChatNetworkCustomIds);
        oprot.WriteFieldEnd();
      }
      if (CustomContactsCustomIds != null && __isset.customContactsCustomIds) {
        field.Name = "customContactsCustomIds";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CustomContactsCustomIds);
        oprot.WriteFieldEnd();
      }
      if (DbStatus != null && __isset.dbStatus) {
        field.Name = "dbStatus";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        DbStatus.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("SuggestContactResponse(");
      bool __first = true;
      if (ContactCustomIds != null && __isset.contactCustomIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactCustomIds: ");
        __sb.Append(ContactCustomIds);
      }
      if (ContactChatNetworkCustomIds != null && __isset.contactChatNetworkCustomIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactChatNetworkCustomIds: ");
        __sb.Append(ContactChatNetworkCustomIds);
      }
      if (CustomContactsCustomIds != null && __isset.customContactsCustomIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CustomContactsCustomIds: ");
        __sb.Append(CustomContactsCustomIds);
      }
      if (DbStatus != null && __isset.dbStatus) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DbStatus: ");
        __sb.Append(DbStatus== null ? "<null>" : DbStatus.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
