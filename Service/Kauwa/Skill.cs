/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace TekTak.iLoop.Kauwa
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class Skill : TBase
  {
    private int _userId;
    private int _friendId;
    private int _skillTypeId;
    private int _thumbsUpOrDown;
    private int _thumbsUp;
    private int _thumbsDown;
    private bool _yourThumb;
    private DbStatus _dbStatus;
    private int _offset;
    private int _pageSize;
    private string _picture;
    private string _username;
    private string _name;
    private string _text;
    private int _suggestorId;
    private bool _accept;
    private int _profileUserId;
    private string _skillName;
    private int _percentThumbsUp;
    private int _percentThumbsDown;
    private string _skillGuid;
    private string _userIdOrName;
    private string _suggestor;
    private string _employeeIds;
    private int _rating;
    private string _profileUser;
    private string _users;
    private int _thumbsCount;

    public int UserId
    {
      get
      {
        return _userId;
      }
      set
      {
        __isset.userId = true;
        this._userId = value;
      }
    }

    public int FriendId
    {
      get
      {
        return _friendId;
      }
      set
      {
        __isset.friendId = true;
        this._friendId = value;
      }
    }

    public int SkillTypeId
    {
      get
      {
        return _skillTypeId;
      }
      set
      {
        __isset.skillTypeId = true;
        this._skillTypeId = value;
      }
    }

    public int ThumbsUpOrDown
    {
      get
      {
        return _thumbsUpOrDown;
      }
      set
      {
        __isset.thumbsUpOrDown = true;
        this._thumbsUpOrDown = value;
      }
    }

    public int ThumbsUp
    {
      get
      {
        return _thumbsUp;
      }
      set
      {
        __isset.thumbsUp = true;
        this._thumbsUp = value;
      }
    }

    public int ThumbsDown
    {
      get
      {
        return _thumbsDown;
      }
      set
      {
        __isset.thumbsDown = true;
        this._thumbsDown = value;
      }
    }

    public bool YourThumb
    {
      get
      {
        return _yourThumb;
      }
      set
      {
        __isset.yourThumb = true;
        this._yourThumb = value;
      }
    }

    public DbStatus DbStatus
    {
      get
      {
        return _dbStatus;
      }
      set
      {
        __isset.dbStatus = true;
        this._dbStatus = value;
      }
    }

    public int Offset
    {
      get
      {
        return _offset;
      }
      set
      {
        __isset.offset = true;
        this._offset = value;
      }
    }

    public int PageSize
    {
      get
      {
        return _pageSize;
      }
      set
      {
        __isset.pageSize = true;
        this._pageSize = value;
      }
    }

    public string Picture
    {
      get
      {
        return _picture;
      }
      set
      {
        __isset.picture = true;
        this._picture = value;
      }
    }

    public string Username
    {
      get
      {
        return _username;
      }
      set
      {
        __isset.username = true;
        this._username = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public string Text
    {
      get
      {
        return _text;
      }
      set
      {
        __isset.text = true;
        this._text = value;
      }
    }

    public int SuggestorId
    {
      get
      {
        return _suggestorId;
      }
      set
      {
        __isset.suggestorId = true;
        this._suggestorId = value;
      }
    }

    public bool Accept
    {
      get
      {
        return _accept;
      }
      set
      {
        __isset.accept = true;
        this._accept = value;
      }
    }

    public int ProfileUserId
    {
      get
      {
        return _profileUserId;
      }
      set
      {
        __isset.profileUserId = true;
        this._profileUserId = value;
      }
    }

    public string SkillName
    {
      get
      {
        return _skillName;
      }
      set
      {
        __isset.skillName = true;
        this._skillName = value;
      }
    }

    public int PercentThumbsUp
    {
      get
      {
        return _percentThumbsUp;
      }
      set
      {
        __isset.percentThumbsUp = true;
        this._percentThumbsUp = value;
      }
    }

    public int PercentThumbsDown
    {
      get
      {
        return _percentThumbsDown;
      }
      set
      {
        __isset.percentThumbsDown = true;
        this._percentThumbsDown = value;
      }
    }

    public string SkillGuid
    {
      get
      {
        return _skillGuid;
      }
      set
      {
        __isset.skillGuid = true;
        this._skillGuid = value;
      }
    }

    public string UserIdOrName
    {
      get
      {
        return _userIdOrName;
      }
      set
      {
        __isset.userIdOrName = true;
        this._userIdOrName = value;
      }
    }

    public string Suggestor
    {
      get
      {
        return _suggestor;
      }
      set
      {
        __isset.suggestor = true;
        this._suggestor = value;
      }
    }

    public string EmployeeIds
    {
      get
      {
        return _employeeIds;
      }
      set
      {
        __isset.employeeIds = true;
        this._employeeIds = value;
      }
    }

    public int Rating
    {
      get
      {
        return _rating;
      }
      set
      {
        __isset.rating = true;
        this._rating = value;
      }
    }

    public string ProfileUser
    {
      get
      {
        return _profileUser;
      }
      set
      {
        __isset.profileUser = true;
        this._profileUser = value;
      }
    }

    public string Users
    {
      get
      {
        return _users;
      }
      set
      {
        __isset.users = true;
        this._users = value;
      }
    }

    public int ThumbsCount
    {
      get
      {
        return _thumbsCount;
      }
      set
      {
        __isset.thumbsCount = true;
        this._thumbsCount = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool userId;
      public bool friendId;
      public bool skillTypeId;
      public bool thumbsUpOrDown;
      public bool thumbsUp;
      public bool thumbsDown;
      public bool yourThumb;
      public bool dbStatus;
      public bool offset;
      public bool pageSize;
      public bool picture;
      public bool username;
      public bool name;
      public bool text;
      public bool suggestorId;
      public bool accept;
      public bool profileUserId;
      public bool skillName;
      public bool percentThumbsUp;
      public bool percentThumbsDown;
      public bool skillGuid;
      public bool userIdOrName;
      public bool suggestor;
      public bool employeeIds;
      public bool rating;
      public bool profileUser;
      public bool users;
      public bool thumbsCount;
    }

    public Skill() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              UserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              FriendId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              SkillTypeId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              ThumbsUpOrDown = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              ThumbsUp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              ThumbsDown = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              YourThumb = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Struct) {
              DbStatus = new DbStatus();
              DbStatus.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Offset = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              PageSize = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              Picture = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.String) {
              Username = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              Text = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              SuggestorId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.Bool) {
              Accept = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.I32) {
              ProfileUserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.String) {
              SkillName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.I32) {
              PercentThumbsUp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              PercentThumbsDown = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 21:
            if (field.Type == TType.String) {
              SkillGuid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 22:
            if (field.Type == TType.String) {
              UserIdOrName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 23:
            if (field.Type == TType.String) {
              Suggestor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 24:
            if (field.Type == TType.String) {
              EmployeeIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 25:
            if (field.Type == TType.I32) {
              Rating = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 26:
            if (field.Type == TType.String) {
              ProfileUser = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 27:
            if (field.Type == TType.String) {
              Users = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 28:
            if (field.Type == TType.I32) {
              ThumbsCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Skill");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.userId) {
        field.Name = "userId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(UserId);
        oprot.WriteFieldEnd();
      }
      if (__isset.friendId) {
        field.Name = "friendId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FriendId);
        oprot.WriteFieldEnd();
      }
      if (__isset.skillTypeId) {
        field.Name = "skillTypeId";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(SkillTypeId);
        oprot.WriteFieldEnd();
      }
      if (__isset.thumbsUpOrDown) {
        field.Name = "thumbsUpOrDown";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ThumbsUpOrDown);
        oprot.WriteFieldEnd();
      }
      if (__isset.thumbsUp) {
        field.Name = "thumbsUp";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ThumbsUp);
        oprot.WriteFieldEnd();
      }
      if (__isset.thumbsDown) {
        field.Name = "thumbsDown";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ThumbsDown);
        oprot.WriteFieldEnd();
      }
      if (__isset.yourThumb) {
        field.Name = "yourThumb";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(YourThumb);
        oprot.WriteFieldEnd();
      }
      if (DbStatus != null && __isset.dbStatus) {
        field.Name = "dbStatus";
        field.Type = TType.Struct;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        DbStatus.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.offset) {
        field.Name = "offset";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Offset);
        oprot.WriteFieldEnd();
      }
      if (__isset.pageSize) {
        field.Name = "pageSize";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(PageSize);
        oprot.WriteFieldEnd();
      }
      if (Picture != null && __isset.picture) {
        field.Name = "picture";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Picture);
        oprot.WriteFieldEnd();
      }
      if (Username != null && __isset.username) {
        field.Name = "username";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Username);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (Text != null && __isset.text) {
        field.Name = "text";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Text);
        oprot.WriteFieldEnd();
      }
      if (__isset.suggestorId) {
        field.Name = "suggestorId";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(SuggestorId);
        oprot.WriteFieldEnd();
      }
      if (__isset.accept) {
        field.Name = "accept";
        field.Type = TType.Bool;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Accept);
        oprot.WriteFieldEnd();
      }
      if (__isset.profileUserId) {
        field.Name = "profileUserId";
        field.Type = TType.I32;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ProfileUserId);
        oprot.WriteFieldEnd();
      }
      if (SkillName != null && __isset.skillName) {
        field.Name = "skillName";
        field.Type = TType.String;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SkillName);
        oprot.WriteFieldEnd();
      }
      if (__isset.percentThumbsUp) {
        field.Name = "percentThumbsUp";
        field.Type = TType.I32;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(PercentThumbsUp);
        oprot.WriteFieldEnd();
      }
      if (__isset.percentThumbsDown) {
        field.Name = "percentThumbsDown";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(PercentThumbsDown);
        oprot.WriteFieldEnd();
      }
      if (SkillGuid != null && __isset.skillGuid) {
        field.Name = "skillGuid";
        field.Type = TType.String;
        field.ID = 21;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SkillGuid);
        oprot.WriteFieldEnd();
      }
      if (UserIdOrName != null && __isset.userIdOrName) {
        field.Name = "userIdOrName";
        field.Type = TType.String;
        field.ID = 22;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UserIdOrName);
        oprot.WriteFieldEnd();
      }
      if (Suggestor != null && __isset.suggestor) {
        field.Name = "suggestor";
        field.Type = TType.String;
        field.ID = 23;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Suggestor);
        oprot.WriteFieldEnd();
      }
      if (EmployeeIds != null && __isset.employeeIds) {
        field.Name = "employeeIds";
        field.Type = TType.String;
        field.ID = 24;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EmployeeIds);
        oprot.WriteFieldEnd();
      }
      if (__isset.rating) {
        field.Name = "rating";
        field.Type = TType.I32;
        field.ID = 25;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Rating);
        oprot.WriteFieldEnd();
      }
      if (ProfileUser != null && __isset.profileUser) {
        field.Name = "profileUser";
        field.Type = TType.String;
        field.ID = 26;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ProfileUser);
        oprot.WriteFieldEnd();
      }
      if (Users != null && __isset.users) {
        field.Name = "users";
        field.Type = TType.String;
        field.ID = 27;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Users);
        oprot.WriteFieldEnd();
      }
      if (__isset.thumbsCount) {
        field.Name = "thumbsCount";
        field.Type = TType.I32;
        field.ID = 28;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ThumbsCount);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("Skill(");
      bool __first = true;
      if (__isset.userId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserId: ");
        __sb.Append(UserId);
      }
      if (__isset.friendId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FriendId: ");
        __sb.Append(FriendId);
      }
      if (__isset.skillTypeId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SkillTypeId: ");
        __sb.Append(SkillTypeId);
      }
      if (__isset.thumbsUpOrDown) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ThumbsUpOrDown: ");
        __sb.Append(ThumbsUpOrDown);
      }
      if (__isset.thumbsUp) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ThumbsUp: ");
        __sb.Append(ThumbsUp);
      }
      if (__isset.thumbsDown) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ThumbsDown: ");
        __sb.Append(ThumbsDown);
      }
      if (__isset.yourThumb) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("YourThumb: ");
        __sb.Append(YourThumb);
      }
      if (DbStatus != null && __isset.dbStatus) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DbStatus: ");
        __sb.Append(DbStatus== null ? "<null>" : DbStatus.ToString());
      }
      if (__isset.offset) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Offset: ");
        __sb.Append(Offset);
      }
      if (__isset.pageSize) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PageSize: ");
        __sb.Append(PageSize);
      }
      if (Picture != null && __isset.picture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picture: ");
        __sb.Append(Picture);
      }
      if (Username != null && __isset.username) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Username: ");
        __sb.Append(Username);
      }
      if (Name != null && __isset.name) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Name: ");
        __sb.Append(Name);
      }
      if (Text != null && __isset.text) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Text: ");
        __sb.Append(Text);
      }
      if (__isset.suggestorId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SuggestorId: ");
        __sb.Append(SuggestorId);
      }
      if (__isset.accept) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Accept: ");
        __sb.Append(Accept);
      }
      if (__isset.profileUserId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ProfileUserId: ");
        __sb.Append(ProfileUserId);
      }
      if (SkillName != null && __isset.skillName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SkillName: ");
        __sb.Append(SkillName);
      }
      if (__isset.percentThumbsUp) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PercentThumbsUp: ");
        __sb.Append(PercentThumbsUp);
      }
      if (__isset.percentThumbsDown) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PercentThumbsDown: ");
        __sb.Append(PercentThumbsDown);
      }
      if (SkillGuid != null && __isset.skillGuid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SkillGuid: ");
        __sb.Append(SkillGuid);
      }
      if (UserIdOrName != null && __isset.userIdOrName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserIdOrName: ");
        __sb.Append(UserIdOrName);
      }
      if (Suggestor != null && __isset.suggestor) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Suggestor: ");
        __sb.Append(Suggestor);
      }
      if (EmployeeIds != null && __isset.employeeIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmployeeIds: ");
        __sb.Append(EmployeeIds);
      }
      if (__isset.rating) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Rating: ");
        __sb.Append(Rating);
      }
      if (ProfileUser != null && __isset.profileUser) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ProfileUser: ");
        __sb.Append(ProfileUser);
      }
      if (Users != null && __isset.users) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Users: ");
        __sb.Append(Users);
      }
      if (__isset.thumbsCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ThumbsCount: ");
        __sb.Append(ThumbsCount);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
