//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class iLoopEntity : DbContext
    {
        public iLoopEntity()
            : base("name=iLoopEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<ChatNetwork> ChatNetworks { get; set; }
        public virtual DbSet<Proficiency> Proficiencies { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<EmployeeType> EmployeeTypes { get; set; }
        public virtual DbSet<EmployerType> EmployerTypes { get; set; }
        public virtual DbSet<Industry> Industries { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationTemporary> LocationTemporaries { get; set; }
        public virtual DbSet<LocationType> LocationTypes { get; set; }
        public virtual DbSet<Nationality> Nationalities { get; set; }
        public virtual DbSet<OwnershipType> OwnershipTypes { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<SkillType> SkillTypes { get; set; }
        public virtual DbSet<Town> Towns { get; set; }
        public virtual DbSet<UserLanguage> UserLanguages { get; set; }
        public virtual DbSet<UserSkill> UserSkills { get; set; }
        public virtual DbSet<RelationshipStatu> RelationshipStatus { get; set; }
        public virtual DbSet<Religion> Religions { get; set; }
        public virtual DbSet<RelationShipType> RelationShipTypes { get; set; }
        public virtual DbSet<StatusType> StatusTypes { get; set; }
        public virtual DbSet<ThumbsForUserSkill> ThumbsForUserSkills { get; set; }
        public virtual DbSet<CompanyUserRating> CompanyUserRatings { get; set; }
        public virtual DbSet<CompanyDepartment> CompanyDepartments { get; set; }
        public virtual DbSet<CompanyDepartmentEmployee> CompanyDepartmentEmployees { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<UserCategoryFriend> UserCategoryFriends { get; set; }
        public virtual DbSet<UserCategory> UserCategories { get; set; }
        public virtual DbSet<Friend> Friends { get; set; }
        public virtual DbSet<UserMobileContact> UserMobileContacts { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<UserMultiLogin> UserMultiLogins { get; set; }
        public virtual DbSet<UserInfoCompany> UserInfoCompanies { get; set; }
        public virtual DbSet<UserInfoPerson> UserInfoPersons { get; set; }
        public virtual DbSet<SettingPerson> SettingPersons { get; set; }
        public virtual DbSet<SettingReferencePerson> SettingReferencePersons { get; set; }
        public virtual DbSet<SettingCompany> SettingCompanies { get; set; }
        public virtual DbSet<SettingReferenceCompany> SettingReferenceCompanies { get; set; }
        public virtual DbSet<SettingTypeCompany> SettingTypeCompanies { get; set; }
        public virtual DbSet<SettingTypePerson> SettingTypePersons { get; set; }
        public virtual DbSet<NotificationType> NotificationTypes { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<RequestType> RequestTypes { get; set; }
        public virtual DbSet<MessageEntryContact> MessageEntryContacts { get; set; }
        public virtual DbSet<MessageFolder> MessageFolders { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<MessageRule> MessageRules { get; set; }
        public virtual DbSet<MessageEntryGroup> MessageEntryGroups { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventDetail> EventDetails { get; set; }
        public virtual DbSet<EventType> EventTypes { get; set; }
        public virtual DbSet<CompanyProductAndService> CompanyProductAndServices { get; set; }
        public virtual DbSet<CompanyPSCategory> CompanyPSCategories { get; set; }
        public virtual DbSet<CompanyPSPaymentType> CompanyPSPaymentTypes { get; set; }
        public virtual DbSet<CompanyPSPrerequisite> CompanyPSPrerequisites { get; set; }
        public virtual DbSet<CompanyPSPrice> CompanyPSPrices { get; set; }
        public virtual DbSet<CompanyPSRoom> CompanyPSRooms { get; set; }
        public virtual DbSet<CompanyPSRoomType> CompanyPSRoomTypes { get; set; }
        public virtual DbSet<CompanyPSSeasonable> CompanyPSSeasonables { get; set; }
        public virtual DbSet<CompanyPSSupplement> CompanyPSSupplements { get; set; }
        public virtual DbSet<CompanyPSTable> CompanyPSTables { get; set; }
        public virtual DbSet<CompanyPSTableConnectable> CompanyPSTableConnectables { get; set; }
        public virtual DbSet<CompanyService> CompanyServices { get; set; }
        public virtual DbSet<CompanyServiceClient> CompanyServiceClients { get; set; }
        public virtual DbSet<CompanyServiceEnlistedEquipment> CompanyServiceEnlistedEquipments { get; set; }
        public virtual DbSet<CompanyServiceEnlistedFacility> CompanyServiceEnlistedFacilities { get; set; }
        public virtual DbSet<CompanyServiceEquipment> CompanyServiceEquipments { get; set; }
        public virtual DbSet<CompanyServiceEventType> CompanyServiceEventTypes { get; set; }
        public virtual DbSet<CompanyServiceFacility> CompanyServiceFacilities { get; set; }
        public virtual DbSet<CompanyServiceResponsibleUser> CompanyServiceResponsibleUsers { get; set; }
        public virtual DbSet<CompanyServiceTimeSchedule> CompanyServiceTimeSchedules { get; set; }
        public virtual DbSet<CompanyServiceTimeType> CompanyServiceTimeTypes { get; set; }
        public virtual DbSet<UserEventAvailability> UserEventAvailabilities { get; set; }
        public virtual DbSet<UserLocation> UserLocations { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<EventAttendee> EventAttendees { get; set; }
        public virtual DbSet<AcademicInstitute> AcademicInstitutes { get; set; }
        public virtual DbSet<Academic> Academics { get; set; }
        public virtual DbSet<AcademicConcentration> AcademicConcentrations { get; set; }
    
        [DbFunction("iLoopEntity", "FNGETFRIENDSHIPSTATUS")]
        public virtual IQueryable<Nullable<int>> FNGETFRIENDSHIPSTATUS(Nullable<int> uSERID, Nullable<int> fRIENDID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var fRIENDIDParameter = fRIENDID.HasValue ?
                new ObjectParameter("FRIENDID", fRIENDID) :
                new ObjectParameter("FRIENDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[iLoopEntity].[FNGETFRIENDSHIPSTATUS](@USERID, @FRIENDID)", uSERIDParameter, fRIENDIDParameter);
        }
    
        [DbFunction("iLoopEntity", "FNGETUSERTITLE")]
        public virtual IQueryable<FNGETUSERTITLE_Result> FNGETUSERTITLE(Nullable<int> uSERID, Nullable<int> rOWSTORETURN)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var rOWSTORETURNParameter = rOWSTORETURN.HasValue ?
                new ObjectParameter("ROWSTORETURN", rOWSTORETURN) :
                new ObjectParameter("ROWSTORETURN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FNGETUSERTITLE_Result>("[iLoopEntity].[FNGETUSERTITLE](@USERID, @ROWSTORETURN)", uSERIDParameter, rOWSTORETURNParameter);
        }
    
        public virtual int PROC_SEND_MAIL(string emailRecipients, string cC, string bCC, string emailSubject, string emailBody, string emailBodyFormat, string emailImportance)
        {
            var emailRecipientsParameter = emailRecipients != null ?
                new ObjectParameter("EmailRecipients", emailRecipients) :
                new ObjectParameter("EmailRecipients", typeof(string));
    
            var cCParameter = cC != null ?
                new ObjectParameter("CC", cC) :
                new ObjectParameter("CC", typeof(string));
    
            var bCCParameter = bCC != null ?
                new ObjectParameter("BCC", bCC) :
                new ObjectParameter("BCC", typeof(string));
    
            var emailSubjectParameter = emailSubject != null ?
                new ObjectParameter("EmailSubject", emailSubject) :
                new ObjectParameter("EmailSubject", typeof(string));
    
            var emailBodyParameter = emailBody != null ?
                new ObjectParameter("EmailBody", emailBody) :
                new ObjectParameter("EmailBody", typeof(string));
    
            var emailBodyFormatParameter = emailBodyFormat != null ?
                new ObjectParameter("EmailBodyFormat", emailBodyFormat) :
                new ObjectParameter("EmailBodyFormat", typeof(string));
    
            var emailImportanceParameter = emailImportance != null ?
                new ObjectParameter("EmailImportance", emailImportance) :
                new ObjectParameter("EmailImportance", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_SEND_MAIL", emailRecipientsParameter, cCParameter, bCCParameter, emailSubjectParameter, emailBodyParameter, emailBodyFormatParameter, emailImportanceParameter);
        }
    
        [DbFunction("iLoopEntity", "FNGETADDRESSBOOKFRIENDS_MOB")]
        public virtual IQueryable<FNGETADDRESSBOOKFRIENDS_MOB_Result> FNGETADDRESSBOOKFRIENDS_MOB(Nullable<int> uSERID, string dEVICEID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var dEVICEIDParameter = dEVICEID != null ?
                new ObjectParameter("DEVICEID", dEVICEID) :
                new ObjectParameter("DEVICEID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FNGETADDRESSBOOKFRIENDS_MOB_Result>("[iLoopEntity].[FNGETADDRESSBOOKFRIENDS_MOB](@USERID, @DEVICEID)", uSERIDParameter, dEVICEIDParameter);
        }
    
        public virtual ObjectResult<PROC_CATEGORY_LIST_Result> PROC_CATEGORY_LIST(Nullable<int> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_CATEGORY_LIST_Result>("PROC_CATEGORY_LIST", uSERIDParameter);
        }
    
        public virtual ObjectResult<PROC_GET_NOTIFANDREQ_MOB_Result> PROC_GET_NOTIFANDREQ_MOB(Nullable<int> uSERID, Nullable<int> pAGEINDEX, Nullable<int> pAGESIZE, ObjectParameter hASNEXTPAGE)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var pAGEINDEXParameter = pAGEINDEX.HasValue ?
                new ObjectParameter("PAGEINDEX", pAGEINDEX) :
                new ObjectParameter("PAGEINDEX", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GET_NOTIFANDREQ_MOB_Result>("PROC_GET_NOTIFANDREQ_MOB", uSERIDParameter, pAGEINDEXParameter, pAGESIZEParameter, hASNEXTPAGE);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_RESPOND_FRIENDREQUEST(Nullable<int> uSERID, Nullable<int> fRIENDID, Nullable<int> cATEGORYID, Nullable<bool> aCCEPTED, ObjectParameter nEWCTAG, ObjectParameter nOTIFICATIONID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var fRIENDIDParameter = fRIENDID.HasValue ?
                new ObjectParameter("FRIENDID", fRIENDID) :
                new ObjectParameter("FRIENDID", typeof(int));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var aCCEPTEDParameter = aCCEPTED.HasValue ?
                new ObjectParameter("ACCEPTED", aCCEPTED) :
                new ObjectParameter("ACCEPTED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_RESPOND_FRIENDREQUEST", uSERIDParameter, fRIENDIDParameter, cATEGORYIDParameter, aCCEPTEDParameter, nEWCTAG, nOTIFICATIONID);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_REQUEST_FRIEND(Nullable<int> uSERID, Nullable<int> fRIENDID, Nullable<int> cATEGORYID, ObjectParameter rEQUESTID, ObjectParameter rEQUESTTYPEID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var fRIENDIDParameter = fRIENDID.HasValue ?
                new ObjectParameter("FRIENDID", fRIENDID) :
                new ObjectParameter("FRIENDID", typeof(int));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_REQUEST_FRIEND", uSERIDParameter, fRIENDIDParameter, cATEGORYIDParameter, rEQUESTID, rEQUESTTYPEID);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_UNFRIEND(Nullable<int> uSERID, Nullable<int> fRIENDID, ObjectParameter nEWCTAG)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var fRIENDIDParameter = fRIENDID.HasValue ?
                new ObjectParameter("FRIENDID", fRIENDID) :
                new ObjectParameter("FRIENDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_UNFRIEND", uSERIDParameter, fRIENDIDParameter, nEWCTAG);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_UPSERT_CUSTOM_LIST(Nullable<int> uSERID, Nullable<int> sETTINGTYPEID, Nullable<int> mODE, Nullable<int> vALUE, string eNTRYLIST, string eNTRIESINPAGE)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var sETTINGTYPEIDParameter = sETTINGTYPEID.HasValue ?
                new ObjectParameter("SETTINGTYPEID", sETTINGTYPEID) :
                new ObjectParameter("SETTINGTYPEID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(int));
    
            var vALUEParameter = vALUE.HasValue ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(int));
    
            var eNTRYLISTParameter = eNTRYLIST != null ?
                new ObjectParameter("ENTRYLIST", eNTRYLIST) :
                new ObjectParameter("ENTRYLIST", typeof(string));
    
            var eNTRIESINPAGEParameter = eNTRIESINPAGE != null ?
                new ObjectParameter("ENTRIESINPAGE", eNTRIESINPAGE) :
                new ObjectParameter("ENTRIESINPAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_UPSERT_CUSTOM_LIST", uSERIDParameter, sETTINGTYPEIDParameter, mODEParameter, vALUEParameter, eNTRYLISTParameter, eNTRIESINPAGEParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_UPSERT_INBOX(Nullable<int> uSERID, string nAME, string rULES, Nullable<byte> mODE, ObjectParameter fOLDERID, ObjectParameter mESSAGERULEIDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rULESParameter = rULES != null ?
                new ObjectParameter("RULES", rULES) :
                new ObjectParameter("RULES", typeof(string));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_UPSERT_INBOX", uSERIDParameter, nAMEParameter, rULESParameter, mODEParameter, fOLDERID, mESSAGERULEIDS);
        }
    
        public virtual ObjectResult<PROC_USERLOGIN_Result> PROC_USERLOGIN(string uSERNAME, string pASSWORDHASH, string pASSWORDSALT, ObjectParameter dBSTATUS, ObjectParameter dBSUBSTATUS, ObjectParameter dBMESSAGE)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var pASSWORDHASHParameter = pASSWORDHASH != null ?
                new ObjectParameter("PASSWORDHASH", pASSWORDHASH) :
                new ObjectParameter("PASSWORDHASH", typeof(string));
    
            var pASSWORDSALTParameter = pASSWORDSALT != null ?
                new ObjectParameter("PASSWORDSALT", pASSWORDSALT) :
                new ObjectParameter("PASSWORDSALT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_USERLOGIN_Result>("PROC_USERLOGIN", uSERNAMEParameter, pASSWORDHASHParameter, pASSWORDSALTParameter, dBSTATUS, dBSUBSTATUS, dBMESSAGE);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_USERLOGIN_CREATEPERSON(string uSERNAME, string fIRSTNAME, string lASTNAME, Nullable<byte> gENDER, string pASSWORD, string pASSWORDSALT, string eMAIL, Nullable<int> pASSWORDFORMAT, Nullable<System.DateTime> dATEOFBIRTH, string cOUNTRYCODE, ObjectParameter uSERID, ObjectParameter uSERGUID, ObjectParameter mOBILERESETCODE)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var fIRSTNAMEParameter = fIRSTNAME != null ?
                new ObjectParameter("FIRSTNAME", fIRSTNAME) :
                new ObjectParameter("FIRSTNAME", typeof(string));
    
            var lASTNAMEParameter = lASTNAME != null ?
                new ObjectParameter("LASTNAME", lASTNAME) :
                new ObjectParameter("LASTNAME", typeof(string));
    
            var gENDERParameter = gENDER.HasValue ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(byte));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var pASSWORDSALTParameter = pASSWORDSALT != null ?
                new ObjectParameter("PASSWORDSALT", pASSWORDSALT) :
                new ObjectParameter("PASSWORDSALT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var pASSWORDFORMATParameter = pASSWORDFORMAT.HasValue ?
                new ObjectParameter("PASSWORDFORMAT", pASSWORDFORMAT) :
                new ObjectParameter("PASSWORDFORMAT", typeof(int));
    
            var dATEOFBIRTHParameter = dATEOFBIRTH.HasValue ?
                new ObjectParameter("DATEOFBIRTH", dATEOFBIRTH) :
                new ObjectParameter("DATEOFBIRTH", typeof(System.DateTime));
    
            var cOUNTRYCODEParameter = cOUNTRYCODE != null ?
                new ObjectParameter("COUNTRYCODE", cOUNTRYCODE) :
                new ObjectParameter("COUNTRYCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_USERLOGIN_CREATEPERSON", uSERNAMEParameter, fIRSTNAMEParameter, lASTNAMEParameter, gENDERParameter, pASSWORDParameter, pASSWORDSALTParameter, eMAILParameter, pASSWORDFORMATParameter, dATEOFBIRTHParameter, cOUNTRYCODEParameter, uSERID, uSERGUID, mOBILERESETCODE);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_UPSERT_CATEGORY(Nullable<int> uSERID, Nullable<byte> mODE, string cATEGORYNAME, string dESCRIPTION, string fRIENDIDS, ObjectParameter uSERCATEGORYTYPEIDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            var cATEGORYNAMEParameter = cATEGORYNAME != null ?
                new ObjectParameter("CATEGORYNAME", cATEGORYNAME) :
                new ObjectParameter("CATEGORYNAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var fRIENDIDSParameter = fRIENDIDS != null ?
                new ObjectParameter("FRIENDIDS", fRIENDIDS) :
                new ObjectParameter("FRIENDIDS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_UPSERT_CATEGORY", uSERIDParameter, mODEParameter, cATEGORYNAMEParameter, dESCRIPTIONParameter, fRIENDIDSParameter, uSERCATEGORYTYPEIDS);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_UPSERT_CATEGORY_FRIENDS(Nullable<int> uSERID, Nullable<byte> mODE, string fRIENDIDS, Nullable<int> uSERCATEGORYTYPEID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            var fRIENDIDSParameter = fRIENDIDS != null ?
                new ObjectParameter("FRIENDIDS", fRIENDIDS) :
                new ObjectParameter("FRIENDIDS", typeof(string));
    
            var uSERCATEGORYTYPEIDParameter = uSERCATEGORYTYPEID.HasValue ?
                new ObjectParameter("USERCATEGORYTYPEID", uSERCATEGORYTYPEID) :
                new ObjectParameter("USERCATEGORYTYPEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_UPSERT_CATEGORY_FRIENDS", uSERIDParameter, mODEParameter, fRIENDIDSParameter, uSERCATEGORYTYPEIDParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_SYNC_PHONEBOOK(Nullable<int> uSERID, string dEVICEID, string cONTACTSADD, string cONTACTSREMOVE, Nullable<bool> fLUSH, ObjectParameter cTAG)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var dEVICEIDParameter = dEVICEID != null ?
                new ObjectParameter("DEVICEID", dEVICEID) :
                new ObjectParameter("DEVICEID", typeof(string));
    
            var cONTACTSADDParameter = cONTACTSADD != null ?
                new ObjectParameter("CONTACTSADD", cONTACTSADD) :
                new ObjectParameter("CONTACTSADD", typeof(string));
    
            var cONTACTSREMOVEParameter = cONTACTSREMOVE != null ?
                new ObjectParameter("CONTACTSREMOVE", cONTACTSREMOVE) :
                new ObjectParameter("CONTACTSREMOVE", typeof(string));
    
            var fLUSHParameter = fLUSH.HasValue ?
                new ObjectParameter("FLUSH", fLUSH) :
                new ObjectParameter("FLUSH", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_SYNC_PHONEBOOK", uSERIDParameter, dEVICEIDParameter, cONTACTSADDParameter, cONTACTSREMOVEParameter, fLUSHParameter, cTAG);
        }
    
        public virtual ObjectResult<Nullable<byte>> PROC_UPSERT_INBOX_RULES(Nullable<int> uSERID, Nullable<byte> mODE, string rULES, ObjectParameter fOLDERID, ObjectParameter mESSAGERULEIDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            var rULESParameter = rULES != null ?
                new ObjectParameter("RULES", rULES) :
                new ObjectParameter("RULES", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("PROC_UPSERT_INBOX_RULES", uSERIDParameter, mODEParameter, rULESParameter, fOLDERID, mESSAGERULEIDS);
        }
    
        public virtual ObjectResult<PROC_UPSERT_NOTIFICATION_Result> PROC_UPSERT_NOTIFICATION(Nullable<int> rECEIVERID, Nullable<int> sENDERID, string nOTIFICATIONTEXT, Nullable<byte> nOTIFICATIONTYPEID, Nullable<int> gROUPID, Nullable<long> eVENTID, Nullable<long> tARGETPOSTID, Nullable<bool> oVERWRITEMODE, ObjectParameter nOTIFICATIONID)
        {
            var rECEIVERIDParameter = rECEIVERID.HasValue ?
                new ObjectParameter("RECEIVERID", rECEIVERID) :
                new ObjectParameter("RECEIVERID", typeof(int));
    
            var sENDERIDParameter = sENDERID.HasValue ?
                new ObjectParameter("SENDERID", sENDERID) :
                new ObjectParameter("SENDERID", typeof(int));
    
            var nOTIFICATIONTEXTParameter = nOTIFICATIONTEXT != null ?
                new ObjectParameter("NOTIFICATIONTEXT", nOTIFICATIONTEXT) :
                new ObjectParameter("NOTIFICATIONTEXT", typeof(string));
    
            var nOTIFICATIONTYPEIDParameter = nOTIFICATIONTYPEID.HasValue ?
                new ObjectParameter("NOTIFICATIONTYPEID", nOTIFICATIONTYPEID) :
                new ObjectParameter("NOTIFICATIONTYPEID", typeof(byte));
    
            var gROUPIDParameter = gROUPID.HasValue ?
                new ObjectParameter("GROUPID", gROUPID) :
                new ObjectParameter("GROUPID", typeof(int));
    
            var eVENTIDParameter = eVENTID.HasValue ?
                new ObjectParameter("EVENTID", eVENTID) :
                new ObjectParameter("EVENTID", typeof(long));
    
            var tARGETPOSTIDParameter = tARGETPOSTID.HasValue ?
                new ObjectParameter("TARGETPOSTID", tARGETPOSTID) :
                new ObjectParameter("TARGETPOSTID", typeof(long));
    
            var oVERWRITEMODEParameter = oVERWRITEMODE.HasValue ?
                new ObjectParameter("OVERWRITEMODE", oVERWRITEMODE) :
                new ObjectParameter("OVERWRITEMODE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_UPSERT_NOTIFICATION_Result>("PROC_UPSERT_NOTIFICATION", rECEIVERIDParameter, sENDERIDParameter, nOTIFICATIONTEXTParameter, nOTIFICATIONTYPEIDParameter, gROUPIDParameter, eVENTIDParameter, tARGETPOSTIDParameter, oVERWRITEMODEParameter, nOTIFICATIONID);
        }
    
        public virtual ObjectResult<PROC_UPSERT_REQUEST_Result> PROC_UPSERT_REQUEST(Nullable<int> userID, Nullable<int> requestedToID, Nullable<short> requestTypeID, Nullable<int> groupID, Nullable<long> eventID, Nullable<bool> overwriteMode, ObjectParameter requestID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var requestedToIDParameter = requestedToID.HasValue ?
                new ObjectParameter("RequestedToID", requestedToID) :
                new ObjectParameter("RequestedToID", typeof(int));
    
            var requestTypeIDParameter = requestTypeID.HasValue ?
                new ObjectParameter("RequestTypeID", requestTypeID) :
                new ObjectParameter("RequestTypeID", typeof(short));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("eventID", eventID) :
                new ObjectParameter("eventID", typeof(long));
    
            var overwriteModeParameter = overwriteMode.HasValue ?
                new ObjectParameter("OverwriteMode", overwriteMode) :
                new ObjectParameter("OverwriteMode", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_UPSERT_REQUEST_Result>("PROC_UPSERT_REQUEST", userIDParameter, requestedToIDParameter, requestTypeIDParameter, groupIDParameter, eventIDParameter, overwriteModeParameter, requestID);
        }
    
        public virtual ObjectResult<PROC_GETWORKSCHEDULE_Result> PROC_GETWORKSCHEDULE(Nullable<long> pERSONEMPLOYMENTID)
        {
            var pERSONEMPLOYMENTIDParameter = pERSONEMPLOYMENTID.HasValue ?
                new ObjectParameter("PERSONEMPLOYMENTID", pERSONEMPLOYMENTID) :
                new ObjectParameter("PERSONEMPLOYMENTID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GETWORKSCHEDULE_Result>("PROC_GETWORKSCHEDULE", pERSONEMPLOYMENTIDParameter);
        }
    
        public virtual ObjectResult<PROC_BASIC_SEARCH_Result> PROC_BASIC_SEARCH(Nullable<int> uSERID, string dEVICEID, string sEARCHTERM, Nullable<byte> uSERTYPEID, Nullable<byte> iSCONNECTED, Nullable<int> oFFSET, Nullable<int> pAGESIZE, ObjectParameter hASNEXTPAGE)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var dEVICEIDParameter = dEVICEID != null ?
                new ObjectParameter("DEVICEID", dEVICEID) :
                new ObjectParameter("DEVICEID", typeof(string));
    
            var sEARCHTERMParameter = sEARCHTERM != null ?
                new ObjectParameter("SEARCHTERM", sEARCHTERM) :
                new ObjectParameter("SEARCHTERM", typeof(string));
    
            var uSERTYPEIDParameter = uSERTYPEID.HasValue ?
                new ObjectParameter("USERTYPEID", uSERTYPEID) :
                new ObjectParameter("USERTYPEID", typeof(byte));
    
            var iSCONNECTEDParameter = iSCONNECTED.HasValue ?
                new ObjectParameter("ISCONNECTED", iSCONNECTED) :
                new ObjectParameter("ISCONNECTED", typeof(byte));
    
            var oFFSETParameter = oFFSET.HasValue ?
                new ObjectParameter("OFFSET", oFFSET) :
                new ObjectParameter("OFFSET", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_BASIC_SEARCH_Result>("PROC_BASIC_SEARCH", uSERIDParameter, dEVICEIDParameter, sEARCHTERMParameter, uSERTYPEIDParameter, iSCONNECTEDParameter, oFFSETParameter, pAGESIZEParameter, hASNEXTPAGE);
        }
    
        public virtual ObjectResult<PROC_UPSERT_CONTACTS_Result> PROC_UPSERT_CONTACTS(Nullable<int> uSERID, Nullable<byte> mODE, string aDDRESS, string eMAIL, string fAX, string mOBILE, string pHONE, string wEBSITE, Nullable<int> cOMPANYUSERID, Nullable<System.DateTime> sTARTDATE, Nullable<System.DateTime> eNDDATE, string cHATNETWORKS, string cUSTOMCONTACTS, ObjectParameter cONTACTID, ObjectParameter cONTACTCHATNETWORKIDS, ObjectParameter cONTACTCUSTOMIDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var mOBILEParameter = mOBILE != null ?
                new ObjectParameter("MOBILE", mOBILE) :
                new ObjectParameter("MOBILE", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var wEBSITEParameter = wEBSITE != null ?
                new ObjectParameter("WEBSITE", wEBSITE) :
                new ObjectParameter("WEBSITE", typeof(string));
    
            var cOMPANYUSERIDParameter = cOMPANYUSERID.HasValue ?
                new ObjectParameter("COMPANYUSERID", cOMPANYUSERID) :
                new ObjectParameter("COMPANYUSERID", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE.HasValue ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(System.DateTime));
    
            var eNDDATEParameter = eNDDATE.HasValue ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(System.DateTime));
    
            var cHATNETWORKSParameter = cHATNETWORKS != null ?
                new ObjectParameter("CHATNETWORKS", cHATNETWORKS) :
                new ObjectParameter("CHATNETWORKS", typeof(string));
    
            var cUSTOMCONTACTSParameter = cUSTOMCONTACTS != null ?
                new ObjectParameter("CUSTOMCONTACTS", cUSTOMCONTACTS) :
                new ObjectParameter("CUSTOMCONTACTS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_UPSERT_CONTACTS_Result>("PROC_UPSERT_CONTACTS", uSERIDParameter, mODEParameter, aDDRESSParameter, eMAILParameter, fAXParameter, mOBILEParameter, pHONEParameter, wEBSITEParameter, cOMPANYUSERIDParameter, sTARTDATEParameter, eNDDATEParameter, cHATNETWORKSParameter, cUSTOMCONTACTSParameter, cONTACTID, cONTACTCHATNETWORKIDS, cONTACTCUSTOMIDS);
        }
    
        public virtual ObjectResult<PROC_RESPOND_CONTACT_SUGGESTION_Result> PROC_RESPOND_CONTACT_SUGGESTION(Nullable<int> uSERID, Nullable<byte> mODE, Nullable<long> cONTACTCUSTOMID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            var cONTACTCUSTOMIDParameter = cONTACTCUSTOMID.HasValue ?
                new ObjectParameter("CONTACTCUSTOMID", cONTACTCUSTOMID) :
                new ObjectParameter("CONTACTCUSTOMID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_RESPOND_CONTACT_SUGGESTION_Result>("PROC_RESPOND_CONTACT_SUGGESTION", uSERIDParameter, mODEParameter, cONTACTCUSTOMIDParameter);
        }
    
        public virtual ObjectResult<PROC_SUGGEST_CONTACTS_Result> PROC_SUGGEST_CONTACTS(Nullable<int> uSERID, Nullable<int> tARGETUSERID, Nullable<byte> mODE, string aDDRESS, string eMAIL, string fAX, string mOBILE, string pHONE, string wEBSITE, string cHATNETWORKS, string cUSTOMCONTACTS, Nullable<long> cONTACTID, ObjectParameter cONTACTCUSTOMIDS, ObjectParameter cONTACTCHATNETWORKCUSTOMIDS, ObjectParameter cUSTOMCONTACTSCUSTOMIDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var tARGETUSERIDParameter = tARGETUSERID.HasValue ?
                new ObjectParameter("TARGETUSERID", tARGETUSERID) :
                new ObjectParameter("TARGETUSERID", typeof(int));
    
            var mODEParameter = mODE.HasValue ?
                new ObjectParameter("MODE", mODE) :
                new ObjectParameter("MODE", typeof(byte));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var mOBILEParameter = mOBILE != null ?
                new ObjectParameter("MOBILE", mOBILE) :
                new ObjectParameter("MOBILE", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var wEBSITEParameter = wEBSITE != null ?
                new ObjectParameter("WEBSITE", wEBSITE) :
                new ObjectParameter("WEBSITE", typeof(string));
    
            var cHATNETWORKSParameter = cHATNETWORKS != null ?
                new ObjectParameter("CHATNETWORKS", cHATNETWORKS) :
                new ObjectParameter("CHATNETWORKS", typeof(string));
    
            var cUSTOMCONTACTSParameter = cUSTOMCONTACTS != null ?
                new ObjectParameter("CUSTOMCONTACTS", cUSTOMCONTACTS) :
                new ObjectParameter("CUSTOMCONTACTS", typeof(string));
    
            var cONTACTIDParameter = cONTACTID.HasValue ?
                new ObjectParameter("CONTACTID", cONTACTID) :
                new ObjectParameter("CONTACTID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_SUGGEST_CONTACTS_Result>("PROC_SUGGEST_CONTACTS", uSERIDParameter, tARGETUSERIDParameter, mODEParameter, aDDRESSParameter, eMAILParameter, fAXParameter, mOBILEParameter, pHONEParameter, wEBSITEParameter, cHATNETWORKSParameter, cUSTOMCONTACTSParameter, cONTACTIDParameter, cONTACTCUSTOMIDS, cONTACTCHATNETWORKCUSTOMIDS, cUSTOMCONTACTSCUSTOMIDS);
        }
    
        [DbFunction("iLoopEntity", "FNGETCONTACTSUGGESTIONS")]
        public virtual IQueryable<FNGETCONTACTSUGGESTIONS_Result> FNGETCONTACTSUGGESTIONS(Nullable<int> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FNGETCONTACTSUGGESTIONS_Result>("[iLoopEntity].[FNGETCONTACTSUGGESTIONS](@USERID)", uSERIDParameter);
        }
    
        [DbFunction("iLoopEntity", "FNGETPROFILEINFORMATIONS")]
        public virtual IQueryable<FNGETPROFILEINFORMATIONS_Result> FNGETPROFILEINFORMATIONS(Nullable<int> uSERID, string pTAGS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var pTAGSParameter = pTAGS != null ?
                new ObjectParameter("PTAGS", pTAGS) :
                new ObjectParameter("PTAGS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FNGETPROFILEINFORMATIONS_Result>("[iLoopEntity].[FNGETPROFILEINFORMATIONS](@USERID, @PTAGS)", uSERIDParameter, pTAGSParameter);
        }
    
        [DbFunction("iLoopEntity", "FNCONTACTSDETAILS")]
        public virtual IQueryable<FNCONTACTSDETAILS_Result> FNCONTACTSDETAILS(Nullable<int> uSERID, string tARGETUSERIDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var tARGETUSERIDSParameter = tARGETUSERIDS != null ?
                new ObjectParameter("TARGETUSERIDS", tARGETUSERIDS) :
                new ObjectParameter("TARGETUSERIDS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FNCONTACTSDETAILS_Result>("[iLoopEntity].[FNCONTACTSDETAILS](@USERID, @TARGETUSERIDS)", uSERIDParameter, tARGETUSERIDSParameter);
        }
    
        public virtual ObjectResult<PROC_PROFILE_VIEW_DETAIL_Result> PROC_PROFILE_VIEW_DETAIL(Nullable<int> uSERID, Nullable<byte> vIEWTYPE, Nullable<int> tYPEID, Nullable<int> oFFSET, Nullable<int> pAGESIZE, ObjectParameter hASNEXTPAGE, ObjectParameter tOTALVIEWS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var vIEWTYPEParameter = vIEWTYPE.HasValue ?
                new ObjectParameter("VIEWTYPE", vIEWTYPE) :
                new ObjectParameter("VIEWTYPE", typeof(byte));
    
            var tYPEIDParameter = tYPEID.HasValue ?
                new ObjectParameter("TYPEID", tYPEID) :
                new ObjectParameter("TYPEID", typeof(int));
    
            var oFFSETParameter = oFFSET.HasValue ?
                new ObjectParameter("OFFSET", oFFSET) :
                new ObjectParameter("OFFSET", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_PROFILE_VIEW_DETAIL_Result>("PROC_PROFILE_VIEW_DETAIL", uSERIDParameter, vIEWTYPEParameter, tYPEIDParameter, oFFSETParameter, pAGESIZEParameter, hASNEXTPAGE, tOTALVIEWS);
        }
    
        public virtual ObjectResult<PROC_PROFILE_VIEW_PANEL_Result> PROC_PROFILE_VIEW_PANEL(Nullable<int> uSERID, ObjectParameter tOTALTYPES)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_PROFILE_VIEW_PANEL_Result>("PROC_PROFILE_VIEW_PANEL", uSERIDParameter, tOTALTYPES);
        }
    
        public virtual ObjectResult<PROC_PROFILE_VIEW_SUMMARY_Result> PROC_PROFILE_VIEW_SUMMARY(Nullable<int> uSERID, Nullable<int> vIEWTYPE, Nullable<int> oFFSET, Nullable<int> pAGESIZE, ObjectParameter hASNEXTPAGE, ObjectParameter tOTALVIEWCOUNT)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var vIEWTYPEParameter = vIEWTYPE.HasValue ?
                new ObjectParameter("VIEWTYPE", vIEWTYPE) :
                new ObjectParameter("VIEWTYPE", typeof(int));
    
            var oFFSETParameter = oFFSET.HasValue ?
                new ObjectParameter("OFFSET", oFFSET) :
                new ObjectParameter("OFFSET", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_PROFILE_VIEW_SUMMARY_Result>("PROC_PROFILE_VIEW_SUMMARY", uSERIDParameter, vIEWTYPEParameter, oFFSETParameter, pAGESIZEParameter, hASNEXTPAGE, tOTALVIEWCOUNT);
        }
    
        public virtual ObjectResult<PROC_MUTUAL_FRIENDS_Result> PROC_MUTUAL_FRIENDS(Nullable<int> uSERID, string tARGETTYPE, string tARGETUSER, Nullable<int> oFFSET, Nullable<int> pAGESIZE, ObjectParameter hASNEXTPAGE, ObjectParameter tOTALRELATEDFRIENDS)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(int));
    
            var tARGETTYPEParameter = tARGETTYPE != null ?
                new ObjectParameter("TARGETTYPE", tARGETTYPE) :
                new ObjectParameter("TARGETTYPE", typeof(string));
    
            var tARGETUSERParameter = tARGETUSER != null ?
                new ObjectParameter("TARGETUSER", tARGETUSER) :
                new ObjectParameter("TARGETUSER", typeof(string));
    
            var oFFSETParameter = oFFSET.HasValue ?
                new ObjectParameter("OFFSET", oFFSET) :
                new ObjectParameter("OFFSET", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_MUTUAL_FRIENDS_Result>("PROC_MUTUAL_FRIENDS", uSERIDParameter, tARGETTYPEParameter, tARGETUSERParameter, oFFSETParameter, pAGESIZEParameter, hASNEXTPAGE, tOTALRELATEDFRIENDS);
        }
    
        [DbFunction("iLoopEntity", "FNGETUSERSINFO")]
        public virtual IQueryable<FNGETUSERSINFO_Result> FNGETUSERSINFO(string uSERS)
        {
            var uSERSParameter = uSERS != null ?
                new ObjectParameter("USERS", uSERS) :
                new ObjectParameter("USERS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FNGETUSERSINFO_Result>("[iLoopEntity].[FNGETUSERSINFO](@USERS)", uSERSParameter);
        }
    
        public virtual ObjectResult<PROC_THUMBS_FOR_SKILL_SUMMARY_Result> PROC_THUMBS_FOR_SKILL_SUMMARY(string tARGETUSER, string pROFILEUSER, Nullable<int> oFFSET, Nullable<int> pAGESIZE, ObjectParameter hASNEXTPAGE)
        {
            var tARGETUSERParameter = tARGETUSER != null ?
                new ObjectParameter("TARGETUSER", tARGETUSER) :
                new ObjectParameter("TARGETUSER", typeof(string));
    
            var pROFILEUSERParameter = pROFILEUSER != null ?
                new ObjectParameter("PROFILEUSER", pROFILEUSER) :
                new ObjectParameter("PROFILEUSER", typeof(string));
    
            var oFFSETParameter = oFFSET.HasValue ?
                new ObjectParameter("OFFSET", oFFSET) :
                new ObjectParameter("OFFSET", typeof(int));
    
            var pAGESIZEParameter = pAGESIZE.HasValue ?
                new ObjectParameter("PAGESIZE", pAGESIZE) :
                new ObjectParameter("PAGESIZE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_THUMBS_FOR_SKILL_SUMMARY_Result>("PROC_THUMBS_FOR_SKILL_SUMMARY", tARGETUSERParameter, pROFILEUSERParameter, oFFSETParameter, pAGESIZEParameter, hASNEXTPAGE);
        }
    }
}
