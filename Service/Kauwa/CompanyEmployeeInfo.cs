/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace TekTak.iLoop.Kauwa
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CompanyEmployeeInfo : TBase
  {
    private int _companyId;
    private int _employeeId;
    private string _username;
    private string _startDate;
    private int _positionId;
    private int _rating;
    private int _companyUserId;
    private string _name;
    private string _picture;
    private string _position;
    private string _companyName;
    private int _employeeTypeId;
    private bool _isExecutiveBody;
    private string _endDate;
    private int _userId;
    private string _companyUsername;
    private string _companyPicture;
    private City _city;
    private Country _country;
    private bool _approvedStatus;
    private string _employeeTypeName;
    private bool _scheduleType;
    private string _firstname;
    private string _lastname;
    private string _added;
    private int _mode;
    private bool _isPromoted;
    private long _requestId;
    private string _positionName;
    private long _employmentId;

    public int CompanyId
    {
      get
      {
        return _companyId;
      }
      set
      {
        __isset.companyId = true;
        this._companyId = value;
      }
    }

    public int EmployeeId
    {
      get
      {
        return _employeeId;
      }
      set
      {
        __isset.employeeId = true;
        this._employeeId = value;
      }
    }

    public string Username
    {
      get
      {
        return _username;
      }
      set
      {
        __isset.username = true;
        this._username = value;
      }
    }

    public string StartDate
    {
      get
      {
        return _startDate;
      }
      set
      {
        __isset.startDate = true;
        this._startDate = value;
      }
    }

    public int PositionId
    {
      get
      {
        return _positionId;
      }
      set
      {
        __isset.positionId = true;
        this._positionId = value;
      }
    }

    public int Rating
    {
      get
      {
        return _rating;
      }
      set
      {
        __isset.rating = true;
        this._rating = value;
      }
    }

    public int CompanyUserId
    {
      get
      {
        return _companyUserId;
      }
      set
      {
        __isset.companyUserId = true;
        this._companyUserId = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public string Picture
    {
      get
      {
        return _picture;
      }
      set
      {
        __isset.picture = true;
        this._picture = value;
      }
    }

    public string Position
    {
      get
      {
        return _position;
      }
      set
      {
        __isset.position = true;
        this._position = value;
      }
    }

    public string CompanyName
    {
      get
      {
        return _companyName;
      }
      set
      {
        __isset.companyName = true;
        this._companyName = value;
      }
    }

    public int EmployeeTypeId
    {
      get
      {
        return _employeeTypeId;
      }
      set
      {
        __isset.employeeTypeId = true;
        this._employeeTypeId = value;
      }
    }

    public bool IsExecutiveBody
    {
      get
      {
        return _isExecutiveBody;
      }
      set
      {
        __isset.isExecutiveBody = true;
        this._isExecutiveBody = value;
      }
    }

    public string EndDate
    {
      get
      {
        return _endDate;
      }
      set
      {
        __isset.endDate = true;
        this._endDate = value;
      }
    }

    public int UserId
    {
      get
      {
        return _userId;
      }
      set
      {
        __isset.userId = true;
        this._userId = value;
      }
    }

    public string CompanyUsername
    {
      get
      {
        return _companyUsername;
      }
      set
      {
        __isset.companyUsername = true;
        this._companyUsername = value;
      }
    }

    public string CompanyPicture
    {
      get
      {
        return _companyPicture;
      }
      set
      {
        __isset.companyPicture = true;
        this._companyPicture = value;
      }
    }

    public City City
    {
      get
      {
        return _city;
      }
      set
      {
        __isset.city = true;
        this._city = value;
      }
    }

    public Country Country
    {
      get
      {
        return _country;
      }
      set
      {
        __isset.country = true;
        this._country = value;
      }
    }

    public bool ApprovedStatus
    {
      get
      {
        return _approvedStatus;
      }
      set
      {
        __isset.approvedStatus = true;
        this._approvedStatus = value;
      }
    }

    public string EmployeeTypeName
    {
      get
      {
        return _employeeTypeName;
      }
      set
      {
        __isset.employeeTypeName = true;
        this._employeeTypeName = value;
      }
    }

    public bool ScheduleType
    {
      get
      {
        return _scheduleType;
      }
      set
      {
        __isset.scheduleType = true;
        this._scheduleType = value;
      }
    }

    public string Firstname
    {
      get
      {
        return _firstname;
      }
      set
      {
        __isset.firstname = true;
        this._firstname = value;
      }
    }

    public string Lastname
    {
      get
      {
        return _lastname;
      }
      set
      {
        __isset.lastname = true;
        this._lastname = value;
      }
    }

    public string Added
    {
      get
      {
        return _added;
      }
      set
      {
        __isset.added = true;
        this._added = value;
      }
    }

    public int Mode
    {
      get
      {
        return _mode;
      }
      set
      {
        __isset.mode = true;
        this._mode = value;
      }
    }

    public bool IsPromoted
    {
      get
      {
        return _isPromoted;
      }
      set
      {
        __isset.isPromoted = true;
        this._isPromoted = value;
      }
    }

    public long RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string PositionName
    {
      get
      {
        return _positionName;
      }
      set
      {
        __isset.positionName = true;
        this._positionName = value;
      }
    }

    public long EmploymentId
    {
      get
      {
        return _employmentId;
      }
      set
      {
        __isset.employmentId = true;
        this._employmentId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool companyId;
      public bool employeeId;
      public bool username;
      public bool startDate;
      public bool positionId;
      public bool rating;
      public bool companyUserId;
      public bool name;
      public bool picture;
      public bool position;
      public bool companyName;
      public bool employeeTypeId;
      public bool isExecutiveBody;
      public bool endDate;
      public bool userId;
      public bool companyUsername;
      public bool companyPicture;
      public bool city;
      public bool country;
      public bool approvedStatus;
      public bool employeeTypeName;
      public bool scheduleType;
      public bool firstname;
      public bool lastname;
      public bool added;
      public bool mode;
      public bool isPromoted;
      public bool requestId;
      public bool positionName;
      public bool employmentId;
    }

    public CompanyEmployeeInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              CompanyId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              EmployeeId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Username = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              StartDate = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              PositionId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Rating = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              CompanyUserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              Picture = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              Position = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              CompanyName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              EmployeeTypeId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Bool) {
              IsExecutiveBody = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              EndDate = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              UserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.String) {
              CompanyUsername = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.String) {
              CompanyPicture = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.Struct) {
              City = new City();
              City.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.Struct) {
              Country = new Country();
              Country.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.Bool) {
              ApprovedStatus = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 21:
            if (field.Type == TType.String) {
              EmployeeTypeName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 22:
            if (field.Type == TType.Bool) {
              ScheduleType = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 23:
            if (field.Type == TType.String) {
              Firstname = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 24:
            if (field.Type == TType.String) {
              Lastname = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 25:
            if (field.Type == TType.String) {
              Added = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 26:
            if (field.Type == TType.I32) {
              Mode = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 27:
            if (field.Type == TType.Bool) {
              IsPromoted = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 28:
            if (field.Type == TType.I64) {
              RequestId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 29:
            if (field.Type == TType.String) {
              PositionName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I64) {
              EmploymentId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CompanyEmployeeInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.companyId) {
        field.Name = "companyId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CompanyId);
        oprot.WriteFieldEnd();
      }
      if (__isset.employeeId) {
        field.Name = "employeeId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EmployeeId);
        oprot.WriteFieldEnd();
      }
      if (Username != null && __isset.username) {
        field.Name = "username";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Username);
        oprot.WriteFieldEnd();
      }
      if (StartDate != null && __isset.startDate) {
        field.Name = "startDate";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StartDate);
        oprot.WriteFieldEnd();
      }
      if (__isset.positionId) {
        field.Name = "positionId";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(PositionId);
        oprot.WriteFieldEnd();
      }
      if (__isset.rating) {
        field.Name = "rating";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Rating);
        oprot.WriteFieldEnd();
      }
      if (__isset.companyUserId) {
        field.Name = "companyUserId";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CompanyUserId);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (Picture != null && __isset.picture) {
        field.Name = "picture";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Picture);
        oprot.WriteFieldEnd();
      }
      if (Position != null && __isset.position) {
        field.Name = "position";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Position);
        oprot.WriteFieldEnd();
      }
      if (CompanyName != null && __isset.companyName) {
        field.Name = "companyName";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CompanyName);
        oprot.WriteFieldEnd();
      }
      if (__isset.employeeTypeId) {
        field.Name = "employeeTypeId";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EmployeeTypeId);
        oprot.WriteFieldEnd();
      }
      if (__isset.isExecutiveBody) {
        field.Name = "isExecutiveBody";
        field.Type = TType.Bool;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsExecutiveBody);
        oprot.WriteFieldEnd();
      }
      if (EndDate != null && __isset.endDate) {
        field.Name = "endDate";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EndDate);
        oprot.WriteFieldEnd();
      }
      if (__isset.userId) {
        field.Name = "userId";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(UserId);
        oprot.WriteFieldEnd();
      }
      if (CompanyUsername != null && __isset.companyUsername) {
        field.Name = "companyUsername";
        field.Type = TType.String;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CompanyUsername);
        oprot.WriteFieldEnd();
      }
      if (CompanyPicture != null && __isset.companyPicture) {
        field.Name = "companyPicture";
        field.Type = TType.String;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CompanyPicture);
        oprot.WriteFieldEnd();
      }
      if (City != null && __isset.city) {
        field.Name = "city";
        field.Type = TType.Struct;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        City.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Country != null && __isset.country) {
        field.Name = "country";
        field.Type = TType.Struct;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        Country.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.approvedStatus) {
        field.Name = "approvedStatus";
        field.Type = TType.Bool;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(ApprovedStatus);
        oprot.WriteFieldEnd();
      }
      if (EmployeeTypeName != null && __isset.employeeTypeName) {
        field.Name = "employeeTypeName";
        field.Type = TType.String;
        field.ID = 21;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EmployeeTypeName);
        oprot.WriteFieldEnd();
      }
      if (__isset.scheduleType) {
        field.Name = "scheduleType";
        field.Type = TType.Bool;
        field.ID = 22;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(ScheduleType);
        oprot.WriteFieldEnd();
      }
      if (Firstname != null && __isset.firstname) {
        field.Name = "firstname";
        field.Type = TType.String;
        field.ID = 23;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Firstname);
        oprot.WriteFieldEnd();
      }
      if (Lastname != null && __isset.lastname) {
        field.Name = "lastname";
        field.Type = TType.String;
        field.ID = 24;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Lastname);
        oprot.WriteFieldEnd();
      }
      if (Added != null && __isset.added) {
        field.Name = "added";
        field.Type = TType.String;
        field.ID = 25;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Added);
        oprot.WriteFieldEnd();
      }
      if (__isset.mode) {
        field.Name = "mode";
        field.Type = TType.I32;
        field.ID = 26;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Mode);
        oprot.WriteFieldEnd();
      }
      if (__isset.isPromoted) {
        field.Name = "isPromoted";
        field.Type = TType.Bool;
        field.ID = 27;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsPromoted);
        oprot.WriteFieldEnd();
      }
      if (__isset.requestId) {
        field.Name = "requestId";
        field.Type = TType.I64;
        field.ID = 28;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(RequestId);
        oprot.WriteFieldEnd();
      }
      if (PositionName != null && __isset.positionName) {
        field.Name = "positionName";
        field.Type = TType.String;
        field.ID = 29;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(PositionName);
        oprot.WriteFieldEnd();
      }
      if (__isset.employmentId) {
        field.Name = "employmentId";
        field.Type = TType.I64;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EmploymentId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("CompanyEmployeeInfo(");
      bool __first = true;
      if (__isset.companyId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyId: ");
        __sb.Append(CompanyId);
      }
      if (__isset.employeeId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmployeeId: ");
        __sb.Append(EmployeeId);
      }
      if (Username != null && __isset.username) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Username: ");
        __sb.Append(Username);
      }
      if (StartDate != null && __isset.startDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StartDate: ");
        __sb.Append(StartDate);
      }
      if (__isset.positionId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PositionId: ");
        __sb.Append(PositionId);
      }
      if (__isset.rating) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Rating: ");
        __sb.Append(Rating);
      }
      if (__isset.companyUserId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyUserId: ");
        __sb.Append(CompanyUserId);
      }
      if (Name != null && __isset.name) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Name: ");
        __sb.Append(Name);
      }
      if (Picture != null && __isset.picture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picture: ");
        __sb.Append(Picture);
      }
      if (Position != null && __isset.position) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Position: ");
        __sb.Append(Position);
      }
      if (CompanyName != null && __isset.companyName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyName: ");
        __sb.Append(CompanyName);
      }
      if (__isset.employeeTypeId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmployeeTypeId: ");
        __sb.Append(EmployeeTypeId);
      }
      if (__isset.isExecutiveBody) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsExecutiveBody: ");
        __sb.Append(IsExecutiveBody);
      }
      if (EndDate != null && __isset.endDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EndDate: ");
        __sb.Append(EndDate);
      }
      if (__isset.userId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserId: ");
        __sb.Append(UserId);
      }
      if (CompanyUsername != null && __isset.companyUsername) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyUsername: ");
        __sb.Append(CompanyUsername);
      }
      if (CompanyPicture != null && __isset.companyPicture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyPicture: ");
        __sb.Append(CompanyPicture);
      }
      if (City != null && __isset.city) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("City: ");
        __sb.Append(City== null ? "<null>" : City.ToString());
      }
      if (Country != null && __isset.country) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Country: ");
        __sb.Append(Country== null ? "<null>" : Country.ToString());
      }
      if (__isset.approvedStatus) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ApprovedStatus: ");
        __sb.Append(ApprovedStatus);
      }
      if (EmployeeTypeName != null && __isset.employeeTypeName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmployeeTypeName: ");
        __sb.Append(EmployeeTypeName);
      }
      if (__isset.scheduleType) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ScheduleType: ");
        __sb.Append(ScheduleType);
      }
      if (Firstname != null && __isset.firstname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Firstname: ");
        __sb.Append(Firstname);
      }
      if (Lastname != null && __isset.lastname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Lastname: ");
        __sb.Append(Lastname);
      }
      if (Added != null && __isset.added) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Added: ");
        __sb.Append(Added);
      }
      if (__isset.mode) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mode: ");
        __sb.Append(Mode);
      }
      if (__isset.isPromoted) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsPromoted: ");
        __sb.Append(IsPromoted);
      }
      if (__isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (PositionName != null && __isset.positionName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PositionName: ");
        __sb.Append(PositionName);
      }
      if (__isset.employmentId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmploymentId: ");
        __sb.Append(EmploymentId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
