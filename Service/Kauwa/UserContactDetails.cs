/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace TekTak.iLoop.Kauwa
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class UserContactDetails : TBase
  {
    private long _contactId;
    private int _contactTypeId;
    private string _address;
    private bool _addressVisible;
    private string _email;
    private bool _emailVisible;
    private string _fax;
    private bool _faxVisible;
    private string _mobile;
    private bool _mobileVisible;
    private string _phone;
    private bool _phoneVisible;
    private string _website;
    private bool _websiteVisible;
    private int _companyUserId;
    private string _startDate;
    private string _endDate;
    private string _strFixedFieldSuggestions;
    private string _strChatNetWorks;
    private string _strChatNetworkSuggestions;
    private string _strContactCustoms;
    private string _strContactCustomSuggestions;
    private int _userId;
    private string _username;
    private int _mode;
    private string _contactChatNetworkId;
    private string _customContactsCustomIds;
    private string _contactCustomIds;
    private string _contactChatNetworkCustomIds;
    private bool _companyUserIdVisible;
    private bool _addressEditable;
    private bool _emailEditable;
    private bool _faxEditable;
    private bool _mobileEditable;
    private bool _phoneEditable;
    private bool _websiteEditable;
    private int _suggestionCount;

    public long ContactId
    {
      get
      {
        return _contactId;
      }
      set
      {
        __isset.contactId = true;
        this._contactId = value;
      }
    }

    public int ContactTypeId
    {
      get
      {
        return _contactTypeId;
      }
      set
      {
        __isset.contactTypeId = true;
        this._contactTypeId = value;
      }
    }

    public string Address
    {
      get
      {
        return _address;
      }
      set
      {
        __isset.address = true;
        this._address = value;
      }
    }

    public bool AddressVisible
    {
      get
      {
        return _addressVisible;
      }
      set
      {
        __isset.addressVisible = true;
        this._addressVisible = value;
      }
    }

    public string Email
    {
      get
      {
        return _email;
      }
      set
      {
        __isset.email = true;
        this._email = value;
      }
    }

    public bool EmailVisible
    {
      get
      {
        return _emailVisible;
      }
      set
      {
        __isset.emailVisible = true;
        this._emailVisible = value;
      }
    }

    public string Fax
    {
      get
      {
        return _fax;
      }
      set
      {
        __isset.fax = true;
        this._fax = value;
      }
    }

    public bool FaxVisible
    {
      get
      {
        return _faxVisible;
      }
      set
      {
        __isset.faxVisible = true;
        this._faxVisible = value;
      }
    }

    public string Mobile
    {
      get
      {
        return _mobile;
      }
      set
      {
        __isset.mobile = true;
        this._mobile = value;
      }
    }

    public bool MobileVisible
    {
      get
      {
        return _mobileVisible;
      }
      set
      {
        __isset.mobileVisible = true;
        this._mobileVisible = value;
      }
    }

    public string Phone
    {
      get
      {
        return _phone;
      }
      set
      {
        __isset.phone = true;
        this._phone = value;
      }
    }

    public bool PhoneVisible
    {
      get
      {
        return _phoneVisible;
      }
      set
      {
        __isset.phoneVisible = true;
        this._phoneVisible = value;
      }
    }

    public string Website
    {
      get
      {
        return _website;
      }
      set
      {
        __isset.website = true;
        this._website = value;
      }
    }

    public bool WebsiteVisible
    {
      get
      {
        return _websiteVisible;
      }
      set
      {
        __isset.websiteVisible = true;
        this._websiteVisible = value;
      }
    }

    public int CompanyUserId
    {
      get
      {
        return _companyUserId;
      }
      set
      {
        __isset.companyUserId = true;
        this._companyUserId = value;
      }
    }

    public string StartDate
    {
      get
      {
        return _startDate;
      }
      set
      {
        __isset.startDate = true;
        this._startDate = value;
      }
    }

    public string EndDate
    {
      get
      {
        return _endDate;
      }
      set
      {
        __isset.endDate = true;
        this._endDate = value;
      }
    }

    public string StrFixedFieldSuggestions
    {
      get
      {
        return _strFixedFieldSuggestions;
      }
      set
      {
        __isset.strFixedFieldSuggestions = true;
        this._strFixedFieldSuggestions = value;
      }
    }

    public string StrChatNetWorks
    {
      get
      {
        return _strChatNetWorks;
      }
      set
      {
        __isset.strChatNetWorks = true;
        this._strChatNetWorks = value;
      }
    }

    public string StrChatNetworkSuggestions
    {
      get
      {
        return _strChatNetworkSuggestions;
      }
      set
      {
        __isset.strChatNetworkSuggestions = true;
        this._strChatNetworkSuggestions = value;
      }
    }

    public string StrContactCustoms
    {
      get
      {
        return _strContactCustoms;
      }
      set
      {
        __isset.strContactCustoms = true;
        this._strContactCustoms = value;
      }
    }

    public string StrContactCustomSuggestions
    {
      get
      {
        return _strContactCustomSuggestions;
      }
      set
      {
        __isset.strContactCustomSuggestions = true;
        this._strContactCustomSuggestions = value;
      }
    }

    public int UserId
    {
      get
      {
        return _userId;
      }
      set
      {
        __isset.userId = true;
        this._userId = value;
      }
    }

    public string Username
    {
      get
      {
        return _username;
      }
      set
      {
        __isset.username = true;
        this._username = value;
      }
    }

    public int Mode
    {
      get
      {
        return _mode;
      }
      set
      {
        __isset.mode = true;
        this._mode = value;
      }
    }

    public string ContactChatNetworkId
    {
      get
      {
        return _contactChatNetworkId;
      }
      set
      {
        __isset.contactChatNetworkId = true;
        this._contactChatNetworkId = value;
      }
    }

    public string CustomContactsCustomIds
    {
      get
      {
        return _customContactsCustomIds;
      }
      set
      {
        __isset.customContactsCustomIds = true;
        this._customContactsCustomIds = value;
      }
    }

    public string ContactCustomIds
    {
      get
      {
        return _contactCustomIds;
      }
      set
      {
        __isset.contactCustomIds = true;
        this._contactCustomIds = value;
      }
    }

    public string ContactChatNetworkCustomIds
    {
      get
      {
        return _contactChatNetworkCustomIds;
      }
      set
      {
        __isset.contactChatNetworkCustomIds = true;
        this._contactChatNetworkCustomIds = value;
      }
    }

    public bool CompanyUserIdVisible
    {
      get
      {
        return _companyUserIdVisible;
      }
      set
      {
        __isset.companyUserIdVisible = true;
        this._companyUserIdVisible = value;
      }
    }

    public bool AddressEditable
    {
      get
      {
        return _addressEditable;
      }
      set
      {
        __isset.addressEditable = true;
        this._addressEditable = value;
      }
    }

    public bool EmailEditable
    {
      get
      {
        return _emailEditable;
      }
      set
      {
        __isset.emailEditable = true;
        this._emailEditable = value;
      }
    }

    public bool FaxEditable
    {
      get
      {
        return _faxEditable;
      }
      set
      {
        __isset.faxEditable = true;
        this._faxEditable = value;
      }
    }

    public bool MobileEditable
    {
      get
      {
        return _mobileEditable;
      }
      set
      {
        __isset.mobileEditable = true;
        this._mobileEditable = value;
      }
    }

    public bool PhoneEditable
    {
      get
      {
        return _phoneEditable;
      }
      set
      {
        __isset.phoneEditable = true;
        this._phoneEditable = value;
      }
    }

    public bool WebsiteEditable
    {
      get
      {
        return _websiteEditable;
      }
      set
      {
        __isset.websiteEditable = true;
        this._websiteEditable = value;
      }
    }

    public int SuggestionCount
    {
      get
      {
        return _suggestionCount;
      }
      set
      {
        __isset.suggestionCount = true;
        this._suggestionCount = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool contactId;
      public bool contactTypeId;
      public bool address;
      public bool addressVisible;
      public bool email;
      public bool emailVisible;
      public bool fax;
      public bool faxVisible;
      public bool mobile;
      public bool mobileVisible;
      public bool phone;
      public bool phoneVisible;
      public bool website;
      public bool websiteVisible;
      public bool companyUserId;
      public bool startDate;
      public bool endDate;
      public bool strFixedFieldSuggestions;
      public bool strChatNetWorks;
      public bool strChatNetworkSuggestions;
      public bool strContactCustoms;
      public bool strContactCustomSuggestions;
      public bool userId;
      public bool username;
      public bool mode;
      public bool contactChatNetworkId;
      public bool customContactsCustomIds;
      public bool contactCustomIds;
      public bool contactChatNetworkCustomIds;
      public bool companyUserIdVisible;
      public bool addressEditable;
      public bool emailEditable;
      public bool faxEditable;
      public bool mobileEditable;
      public bool phoneEditable;
      public bool websiteEditable;
      public bool suggestionCount;
    }

    public UserContactDetails() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              ContactId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              ContactTypeId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Address = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Bool) {
              AddressVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Email = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Bool) {
              EmailVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              Fax = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Bool) {
              FaxVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              Mobile = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Bool) {
              MobileVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              Phone = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Bool) {
              PhoneVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              Website = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.Bool) {
              WebsiteVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              CompanyUserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.String) {
              StartDate = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.String) {
              EndDate = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.String) {
              StrFixedFieldSuggestions = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.String) {
              StrChatNetWorks = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.String) {
              StrChatNetworkSuggestions = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 21:
            if (field.Type == TType.String) {
              StrContactCustoms = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 22:
            if (field.Type == TType.String) {
              StrContactCustomSuggestions = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 23:
            if (field.Type == TType.I32) {
              UserId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 24:
            if (field.Type == TType.String) {
              Username = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 25:
            if (field.Type == TType.I32) {
              Mode = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 26:
            if (field.Type == TType.String) {
              ContactChatNetworkId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 27:
            if (field.Type == TType.String) {
              CustomContactsCustomIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 28:
            if (field.Type == TType.String) {
              ContactCustomIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 29:
            if (field.Type == TType.String) {
              ContactChatNetworkCustomIds = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.Bool) {
              CompanyUserIdVisible = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 31:
            if (field.Type == TType.Bool) {
              AddressEditable = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 32:
            if (field.Type == TType.Bool) {
              EmailEditable = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 33:
            if (field.Type == TType.Bool) {
              FaxEditable = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 34:
            if (field.Type == TType.Bool) {
              MobileEditable = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 35:
            if (field.Type == TType.Bool) {
              PhoneEditable = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 36:
            if (field.Type == TType.Bool) {
              WebsiteEditable = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 37:
            if (field.Type == TType.I32) {
              SuggestionCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("UserContactDetails");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.contactId) {
        field.Name = "contactId";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(ContactId);
        oprot.WriteFieldEnd();
      }
      if (__isset.contactTypeId) {
        field.Name = "contactTypeId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ContactTypeId);
        oprot.WriteFieldEnd();
      }
      if (Address != null && __isset.address) {
        field.Name = "address";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Address);
        oprot.WriteFieldEnd();
      }
      if (__isset.addressVisible) {
        field.Name = "addressVisible";
        field.Type = TType.Bool;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(AddressVisible);
        oprot.WriteFieldEnd();
      }
      if (Email != null && __isset.email) {
        field.Name = "email";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Email);
        oprot.WriteFieldEnd();
      }
      if (__isset.emailVisible) {
        field.Name = "emailVisible";
        field.Type = TType.Bool;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(EmailVisible);
        oprot.WriteFieldEnd();
      }
      if (Fax != null && __isset.fax) {
        field.Name = "fax";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Fax);
        oprot.WriteFieldEnd();
      }
      if (__isset.faxVisible) {
        field.Name = "faxVisible";
        field.Type = TType.Bool;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(FaxVisible);
        oprot.WriteFieldEnd();
      }
      if (Mobile != null && __isset.mobile) {
        field.Name = "mobile";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Mobile);
        oprot.WriteFieldEnd();
      }
      if (__isset.mobileVisible) {
        field.Name = "mobileVisible";
        field.Type = TType.Bool;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(MobileVisible);
        oprot.WriteFieldEnd();
      }
      if (Phone != null && __isset.phone) {
        field.Name = "phone";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Phone);
        oprot.WriteFieldEnd();
      }
      if (__isset.phoneVisible) {
        field.Name = "phoneVisible";
        field.Type = TType.Bool;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(PhoneVisible);
        oprot.WriteFieldEnd();
      }
      if (Website != null && __isset.website) {
        field.Name = "website";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Website);
        oprot.WriteFieldEnd();
      }
      if (__isset.websiteVisible) {
        field.Name = "websiteVisible";
        field.Type = TType.Bool;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(WebsiteVisible);
        oprot.WriteFieldEnd();
      }
      if (__isset.companyUserId) {
        field.Name = "companyUserId";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CompanyUserId);
        oprot.WriteFieldEnd();
      }
      if (StartDate != null && __isset.startDate) {
        field.Name = "startDate";
        field.Type = TType.String;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StartDate);
        oprot.WriteFieldEnd();
      }
      if (EndDate != null && __isset.endDate) {
        field.Name = "endDate";
        field.Type = TType.String;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EndDate);
        oprot.WriteFieldEnd();
      }
      if (StrFixedFieldSuggestions != null && __isset.strFixedFieldSuggestions) {
        field.Name = "strFixedFieldSuggestions";
        field.Type = TType.String;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StrFixedFieldSuggestions);
        oprot.WriteFieldEnd();
      }
      if (StrChatNetWorks != null && __isset.strChatNetWorks) {
        field.Name = "strChatNetWorks";
        field.Type = TType.String;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StrChatNetWorks);
        oprot.WriteFieldEnd();
      }
      if (StrChatNetworkSuggestions != null && __isset.strChatNetworkSuggestions) {
        field.Name = "strChatNetworkSuggestions";
        field.Type = TType.String;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StrChatNetworkSuggestions);
        oprot.WriteFieldEnd();
      }
      if (StrContactCustoms != null && __isset.strContactCustoms) {
        field.Name = "strContactCustoms";
        field.Type = TType.String;
        field.ID = 21;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StrContactCustoms);
        oprot.WriteFieldEnd();
      }
      if (StrContactCustomSuggestions != null && __isset.strContactCustomSuggestions) {
        field.Name = "strContactCustomSuggestions";
        field.Type = TType.String;
        field.ID = 22;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(StrContactCustomSuggestions);
        oprot.WriteFieldEnd();
      }
      if (__isset.userId) {
        field.Name = "userId";
        field.Type = TType.I32;
        field.ID = 23;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(UserId);
        oprot.WriteFieldEnd();
      }
      if (Username != null && __isset.username) {
        field.Name = "username";
        field.Type = TType.String;
        field.ID = 24;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Username);
        oprot.WriteFieldEnd();
      }
      if (__isset.mode) {
        field.Name = "mode";
        field.Type = TType.I32;
        field.ID = 25;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Mode);
        oprot.WriteFieldEnd();
      }
      if (ContactChatNetworkId != null && __isset.contactChatNetworkId) {
        field.Name = "contactChatNetworkId";
        field.Type = TType.String;
        field.ID = 26;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContactChatNetworkId);
        oprot.WriteFieldEnd();
      }
      if (CustomContactsCustomIds != null && __isset.customContactsCustomIds) {
        field.Name = "customContactsCustomIds";
        field.Type = TType.String;
        field.ID = 27;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CustomContactsCustomIds);
        oprot.WriteFieldEnd();
      }
      if (ContactCustomIds != null && __isset.contactCustomIds) {
        field.Name = "contactCustomIds";
        field.Type = TType.String;
        field.ID = 28;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContactCustomIds);
        oprot.WriteFieldEnd();
      }
      if (ContactChatNetworkCustomIds != null && __isset.contactChatNetworkCustomIds) {
        field.Name = "contactChatNetworkCustomIds";
        field.Type = TType.String;
        field.ID = 29;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContactChatNetworkCustomIds);
        oprot.WriteFieldEnd();
      }
      if (__isset.companyUserIdVisible) {
        field.Name = "companyUserIdVisible";
        field.Type = TType.Bool;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(CompanyUserIdVisible);
        oprot.WriteFieldEnd();
      }
      if (__isset.addressEditable) {
        field.Name = "addressEditable";
        field.Type = TType.Bool;
        field.ID = 31;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(AddressEditable);
        oprot.WriteFieldEnd();
      }
      if (__isset.emailEditable) {
        field.Name = "emailEditable";
        field.Type = TType.Bool;
        field.ID = 32;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(EmailEditable);
        oprot.WriteFieldEnd();
      }
      if (__isset.faxEditable) {
        field.Name = "faxEditable";
        field.Type = TType.Bool;
        field.ID = 33;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(FaxEditable);
        oprot.WriteFieldEnd();
      }
      if (__isset.mobileEditable) {
        field.Name = "mobileEditable";
        field.Type = TType.Bool;
        field.ID = 34;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(MobileEditable);
        oprot.WriteFieldEnd();
      }
      if (__isset.phoneEditable) {
        field.Name = "phoneEditable";
        field.Type = TType.Bool;
        field.ID = 35;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(PhoneEditable);
        oprot.WriteFieldEnd();
      }
      if (__isset.websiteEditable) {
        field.Name = "websiteEditable";
        field.Type = TType.Bool;
        field.ID = 36;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(WebsiteEditable);
        oprot.WriteFieldEnd();
      }
      if (__isset.suggestionCount) {
        field.Name = "suggestionCount";
        field.Type = TType.I32;
        field.ID = 37;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(SuggestionCount);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("UserContactDetails(");
      bool __first = true;
      if (__isset.contactId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactId: ");
        __sb.Append(ContactId);
      }
      if (__isset.contactTypeId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactTypeId: ");
        __sb.Append(ContactTypeId);
      }
      if (Address != null && __isset.address) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Address: ");
        __sb.Append(Address);
      }
      if (__isset.addressVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AddressVisible: ");
        __sb.Append(AddressVisible);
      }
      if (Email != null && __isset.email) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Email: ");
        __sb.Append(Email);
      }
      if (__isset.emailVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmailVisible: ");
        __sb.Append(EmailVisible);
      }
      if (Fax != null && __isset.fax) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Fax: ");
        __sb.Append(Fax);
      }
      if (__isset.faxVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FaxVisible: ");
        __sb.Append(FaxVisible);
      }
      if (Mobile != null && __isset.mobile) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mobile: ");
        __sb.Append(Mobile);
      }
      if (__isset.mobileVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MobileVisible: ");
        __sb.Append(MobileVisible);
      }
      if (Phone != null && __isset.phone) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Phone: ");
        __sb.Append(Phone);
      }
      if (__isset.phoneVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PhoneVisible: ");
        __sb.Append(PhoneVisible);
      }
      if (Website != null && __isset.website) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Website: ");
        __sb.Append(Website);
      }
      if (__isset.websiteVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("WebsiteVisible: ");
        __sb.Append(WebsiteVisible);
      }
      if (__isset.companyUserId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyUserId: ");
        __sb.Append(CompanyUserId);
      }
      if (StartDate != null && __isset.startDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StartDate: ");
        __sb.Append(StartDate);
      }
      if (EndDate != null && __isset.endDate) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EndDate: ");
        __sb.Append(EndDate);
      }
      if (StrFixedFieldSuggestions != null && __isset.strFixedFieldSuggestions) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StrFixedFieldSuggestions: ");
        __sb.Append(StrFixedFieldSuggestions);
      }
      if (StrChatNetWorks != null && __isset.strChatNetWorks) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StrChatNetWorks: ");
        __sb.Append(StrChatNetWorks);
      }
      if (StrChatNetworkSuggestions != null && __isset.strChatNetworkSuggestions) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StrChatNetworkSuggestions: ");
        __sb.Append(StrChatNetworkSuggestions);
      }
      if (StrContactCustoms != null && __isset.strContactCustoms) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StrContactCustoms: ");
        __sb.Append(StrContactCustoms);
      }
      if (StrContactCustomSuggestions != null && __isset.strContactCustomSuggestions) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StrContactCustomSuggestions: ");
        __sb.Append(StrContactCustomSuggestions);
      }
      if (__isset.userId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserId: ");
        __sb.Append(UserId);
      }
      if (Username != null && __isset.username) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Username: ");
        __sb.Append(Username);
      }
      if (__isset.mode) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mode: ");
        __sb.Append(Mode);
      }
      if (ContactChatNetworkId != null && __isset.contactChatNetworkId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactChatNetworkId: ");
        __sb.Append(ContactChatNetworkId);
      }
      if (CustomContactsCustomIds != null && __isset.customContactsCustomIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CustomContactsCustomIds: ");
        __sb.Append(CustomContactsCustomIds);
      }
      if (ContactCustomIds != null && __isset.contactCustomIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactCustomIds: ");
        __sb.Append(ContactCustomIds);
      }
      if (ContactChatNetworkCustomIds != null && __isset.contactChatNetworkCustomIds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContactChatNetworkCustomIds: ");
        __sb.Append(ContactChatNetworkCustomIds);
      }
      if (__isset.companyUserIdVisible) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CompanyUserIdVisible: ");
        __sb.Append(CompanyUserIdVisible);
      }
      if (__isset.addressEditable) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AddressEditable: ");
        __sb.Append(AddressEditable);
      }
      if (__isset.emailEditable) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmailEditable: ");
        __sb.Append(EmailEditable);
      }
      if (__isset.faxEditable) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FaxEditable: ");
        __sb.Append(FaxEditable);
      }
      if (__isset.mobileEditable) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MobileEditable: ");
        __sb.Append(MobileEditable);
      }
      if (__isset.phoneEditable) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PhoneEditable: ");
        __sb.Append(PhoneEditable);
      }
      if (__isset.websiteEditable) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("WebsiteEditable: ");
        __sb.Append(WebsiteEditable);
      }
      if (__isset.suggestionCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SuggestionCount: ");
        __sb.Append(SuggestionCount);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
